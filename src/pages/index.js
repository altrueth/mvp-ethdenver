import React, { useEffect, useState } from 'react';
import TextTransition, { presets } from "react-text-transition";
import Button from 'react-bootstrap/Button';
import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Navbar from 'react-bootstrap/Navbar';

import Nav from 'react-bootstrap/Nav';
import Dropdown from 'react-bootstrap/Dropdown';

import { useWeb3React } from "@web3-react/core"
import { connectors } from "../components/connectors"
import Identicon from "../components/identicon"
import Head from 'next/head'
import Image from 'next/image'

import jazzicon from '@metamask/jazzicon'

import { toHex, truncateAddress } from "./utils";

import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'

import 'bootstrap/dist/css/bootstrap.min.css';


const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const { active, account, library, connector, activate, deactivate } = useWeb3React()
  const [index, setIndex] = useState(0)
  const whatToDonate = ['Staking Rewards', 'DeFi Yields', 'Passively']
  const iconSize = 24
  const icon = account && jazzicon(iconSize, parseInt(account.slice(2, 10), 16))


  const setProvider = (type) => {
    window.localStorage.setItem("provider", type);
  };

  useEffect(() => {
    const provider = window.localStorage.getItem("provider");
    if (provider) activate(connectors[provider]);
  }, []);

  useEffect(() => {
    // Update the state every 3 seconds
    const interval = setInterval(() => {
      // Loop through indices of array modulus its length
      setIndex((index + 1) % whatToDonate.length)
    }, 3000)

    // Clean up
    return (() => clearInterval(interval)) 
  })

  async function connect() {
    activate(connectors.injected);
    setProvider("injected");
  }

  const refreshState = () => {
    window.localStorage.setItem("provider", undefined);
  };

  const disconnect = () => {
    refreshState();
    deactivate();
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Navbar className="justify-content-end mb-auto" activeKey="/home">
          <Container>
            <Navbar.Toggle />
            <Navbar.Collapse className="justify-content-end">
              <Navbar.Text>

            {active
              ? <Dropdown>
                <Dropdown.Toggle id="dropdown-basic">
                  <div className={styles.idButton}>
                    <Identicon />&nbsp;
                        {truncateAddress(account)}
                  </div>
                  </Dropdown.Toggle>

                  <Dropdown.Menu>
                    <Dropdown.Item onClick={disconnect}>Disconnect</Dropdown.Item>
                  </Dropdown.Menu>
                </Dropdown>

              : <Button onClick={connect}>Connect Wallet</Button>}

              </Navbar.Text>
            </Navbar.Collapse>
          </Container>
        </Navbar>

        <Container className="mb-auto">
          <Row>
            <h1 className={inter.className}>
              <div className={styles.floatleft}>Donate&nbsp;</div> 
              <TextTransition springConfig={presets.gentle} className={styles.floatleft}>
                {whatToDonate[index]}
              </TextTransition>
            </h1>
          </Row>
          <Row>
            <p className={styles.heroParagraph}>Charitable donations on autopilot. Pledge to Giving What We Can, choose the causes you care most about and see your impact grow over time.</p>
          </Row>        
        </Container>

        
      </main>
    </>
  )
}
